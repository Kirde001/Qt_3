#ifndef BOOKSORTFILTERPROXYMODEL_H
#define BOOKSORTFILTERPROXYMODEL_H

#include <QSortFilterProxyModel>
#include <QModelIndex>
#include <QVariant>
#include <QString>
#include <QStandardItemModel> // Нужен для доступа к данным исходной модели
#include <QDate> // Нужен для работы с датой

class BookSortFilterProxyModel : public QSortFilterProxyModel
{
    Q_OBJECT

public:
    explicit BookSortFilterProxyModel(QObject *parent = nullptr);

    // Сеттеры для установки критериев поиска из двух наборов полей
    void setFilterCriteria1(const QString &searchText, int column);
    void setFilterCriteria2(const QString &searchText, int column);

    // Вспомогательная функция для получения индекса столбца по его названию
    // (нужна внутри proxy model для обработки специфичных столбцов, например, даты)
    int getSourceColumnIndex(const QString &columnTitle) const;


protected:
    // Переопределяем этот метод для реализации кастомной логики фильтрации
    bool filterAcceptsRow(int sourceRow, const QModelIndex &sourceParent) const override;

private:
    QString m_searchText1;
    int m_filterColumn1;
    QString m_searchText2;
    int m_filterColumn2;

    // Вспомогательная функция для проверки, соответствует ли элемент критерию
    bool itemMatches(const QVariant &itemData, const QString &searchText, int column, const QStandardItemModel *sourceModel) const;
};

#endif // BOOKSORTFILTERPROXYMODEL_H
